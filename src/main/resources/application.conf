akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = "on" // used to check that the config is loaded

  ssl-config{
    loose {
      disableHostnameVerification = true
    }
  }

  http {
    client {
      parsing {
        max-chunk-size = 5m
      }
    }
  }

  quartz {
    defaultTimezone = "UTC"
    schedules {
      bugzillaActor {
        description = "Bugzilla job that fires off every 30 minutes"
        expression = "0 */30 * * * ?"
      }
      weeklyReportSender {
        description = "Weekly report sender job that fires every Friday at 12:00PM"
        expression = "0 0 12 ? * FRI *"
      }
      slaReportSender {
        description = "Sla report sender job that fires every Friday at 12:00PM"
        expression = "0 0 12 ? * FRI *"
      }
    }
  }
}

http {
  host = "0.0.0.0"
  port = 9000
}

bugzilla {
  url = "http://192.168.100.2:80/bugzilla"
  username = "bugs"
  password = "bugs"
  start-date = "2015-01-01T00:00:00Z"
  bug-limit = 2000

  repository-path = "./repo"
  repository-file = "bugs.json"
  fetch-timeout = 90

  environment = "Production"
  excludedProducts = ["CRF Hot Deploy - Prod DB", "Ecomm Deploy - Prod DB"]
  excludedComponents = ["Dataload Failed", "New Files Arrived", "Data Consistency"]

}

reports {
  maxJobs = 10
  fopConf = "fop1.xconf"
  reportDir = "./reports"

  types = {
    weekly = {
      template = "templates/weekly.xsl"
    }
    sla = {
      template = "templates/sla.xsl"
    }
  }
}

employees {
  path = "./repo/employees.txt"
}

mailer {

  mail.username = "username"
  mail.password = "password"
  mail.smtp.host = "localhost"
  mail.smtp.port = 25

}

emails {

  from = "bug-app@localhost"

  weekly {
    to = ["user1@localhost", "user2@localhost"]
    cc = ["psupport@localhost"]
  }
}